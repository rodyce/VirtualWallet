// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_defs/grpc/TransactionService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VirtualWallet.Proto.Grpc {

  /// <summary>Holder for reflection information generated from proto_defs/grpc/TransactionService.proto</summary>
  public static partial class TransactionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for proto_defs/grpc/TransactionService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihwcm90b19kZWZzL2dycGMvVHJhbnNhY3Rpb25TZXJ2aWNlLnByb3RvEhhW",
            "aXJ0dWFsV2FsbGV0LlByb3RvLkdycGMaG2dvb2dsZS9wcm90b2J1Zi9lbXB0",
            "eS5wcm90bxolcHJvdG9fZGVmcy9tZXNzYWdlcy9UcmFuc2FjdGlvbi5wcm90",
            "byJACgxUb3BVcFJlcXVlc3QSDgoGZGVhbGVyGAEgASgJEhAKCGN1c3RvbWVy",
            "GAIgASgJEg4KBmFtb3VudBgDIAEoBCJBCg9UcmFuc2ZlclJlcXVlc3QSDgoG",
            "b3JpZ2luGAEgASgJEg4KBnRhcmdldBgCIAEoCRIOCgZhbW91bnQYAyABKAQi",
            "QgoPUHVyY2hhc2VSZXF1ZXN0Eg0KBXN0b3JlGAEgASgJEhAKCGN1c3RvbWVy",
            "GAIgASgJEg4KBmFtb3VudBgDIAEoBCIbCg1UcmFuc2FjdGlvbklkEgoKAmlk",
            "GAEgASgEMoEEChJUcmFuc2FjdGlvblNlcnZpY2USWQoSR2V0QWxsVHJhbnNh",
            "Y3Rpb25zEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GikuVmlydHVhbFdhbGxl",
            "dC5Qcm90by5NZXNzYWdlcy5UcmFuc2FjdGlvbjABEl0KCE5ld1RvcFVwEiYu",
            "VmlydHVhbFdhbGxldC5Qcm90by5HcnBjLlRvcFVwUmVxdWVzdBopLlZpcnR1",
            "YWxXYWxsZXQuUHJvdG8uTWVzc2FnZXMuVHJhbnNhY3Rpb24SYwoLTmV3VHJh",
            "bnNmZXISKS5WaXJ0dWFsV2FsbGV0LlByb3RvLkdycGMuVHJhbnNmZXJSZXF1",
            "ZXN0GikuVmlydHVhbFdhbGxldC5Qcm90by5NZXNzYWdlcy5UcmFuc2FjdGlv",
            "bhJjCgtOZXdQdXJjaGFzZRIpLlZpcnR1YWxXYWxsZXQuUHJvdG8uR3JwYy5Q",
            "dXJjaGFzZVJlcXVlc3QaKS5WaXJ0dWFsV2FsbGV0LlByb3RvLk1lc3NhZ2Vz",
            "LlRyYW5zYWN0aW9uEmcKD1ZpZXdUcmFuc2FjdGlvbhInLlZpcnR1YWxXYWxs",
            "ZXQuUHJvdG8uR3JwYy5UcmFuc2FjdGlvbklkGikuVmlydHVhbFdhbGxldC5Q",
            "cm90by5NZXNzYWdlcy5UcmFuc2FjdGlvbjABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::VirtualWallet.Proto.Messages.TransactionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VirtualWallet.Proto.Grpc.TopUpRequest), global::VirtualWallet.Proto.Grpc.TopUpRequest.Parser, new[]{ "Dealer", "Customer", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VirtualWallet.Proto.Grpc.TransferRequest), global::VirtualWallet.Proto.Grpc.TransferRequest.Parser, new[]{ "Origin", "Target", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VirtualWallet.Proto.Grpc.PurchaseRequest), global::VirtualWallet.Proto.Grpc.PurchaseRequest.Parser, new[]{ "Store", "Customer", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VirtualWallet.Proto.Grpc.TransactionId), global::VirtualWallet.Proto.Grpc.TransactionId.Parser, new[]{ "Id" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TopUpRequest : pb::IMessage<TopUpRequest> {
    private static readonly pb::MessageParser<TopUpRequest> _parser = new pb::MessageParser<TopUpRequest>(() => new TopUpRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopUpRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VirtualWallet.Proto.Grpc.TransactionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopUpRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopUpRequest(TopUpRequest other) : this() {
      dealer_ = other.dealer_;
      customer_ = other.customer_;
      amount_ = other.amount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopUpRequest Clone() {
      return new TopUpRequest(this);
    }

    /// <summary>Field number for the "dealer" field.</summary>
    public const int DealerFieldNumber = 1;
    private string dealer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dealer {
      get { return dealer_; }
      set {
        dealer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customer" field.</summary>
    public const int CustomerFieldNumber = 2;
    private string customer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Customer {
      get { return customer_; }
      set {
        customer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopUpRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopUpRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dealer != other.Dealer) return false;
      if (Customer != other.Customer) return false;
      if (Amount != other.Amount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dealer.Length != 0) hash ^= Dealer.GetHashCode();
      if (Customer.Length != 0) hash ^= Customer.GetHashCode();
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dealer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Dealer);
      }
      if (Customer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Customer);
      }
      if (Amount != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dealer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dealer);
      }
      if (Customer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Customer);
      }
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopUpRequest other) {
      if (other == null) {
        return;
      }
      if (other.Dealer.Length != 0) {
        Dealer = other.Dealer;
      }
      if (other.Customer.Length != 0) {
        Customer = other.Customer;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Dealer = input.ReadString();
            break;
          }
          case 18: {
            Customer = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferRequest : pb::IMessage<TransferRequest> {
    private static readonly pb::MessageParser<TransferRequest> _parser = new pb::MessageParser<TransferRequest>(() => new TransferRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VirtualWallet.Proto.Grpc.TransactionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferRequest(TransferRequest other) : this() {
      origin_ = other.origin_;
      target_ = other.target_;
      amount_ = other.amount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferRequest Clone() {
      return new TransferRequest(this);
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 1;
    private string origin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Origin {
      get { return origin_; }
      set {
        origin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Origin != other.Origin) return false;
      if (Target != other.Target) return false;
      if (Amount != other.Amount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Origin.Length != 0) hash ^= Origin.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Origin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Origin);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      if (Amount != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Origin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Origin);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferRequest other) {
      if (other == null) {
        return;
      }
      if (other.Origin.Length != 0) {
        Origin = other.Origin;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Origin = input.ReadString();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseRequest : pb::IMessage<PurchaseRequest> {
    private static readonly pb::MessageParser<PurchaseRequest> _parser = new pb::MessageParser<PurchaseRequest>(() => new PurchaseRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VirtualWallet.Proto.Grpc.TransactionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRequest(PurchaseRequest other) : this() {
      store_ = other.store_;
      customer_ = other.customer_;
      amount_ = other.amount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRequest Clone() {
      return new PurchaseRequest(this);
    }

    /// <summary>Field number for the "store" field.</summary>
    public const int StoreFieldNumber = 1;
    private string store_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Store {
      get { return store_; }
      set {
        store_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customer" field.</summary>
    public const int CustomerFieldNumber = 2;
    private string customer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Customer {
      get { return customer_; }
      set {
        customer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Store != other.Store) return false;
      if (Customer != other.Customer) return false;
      if (Amount != other.Amount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Store.Length != 0) hash ^= Store.GetHashCode();
      if (Customer.Length != 0) hash ^= Customer.GetHashCode();
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Store.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Store);
      }
      if (Customer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Customer);
      }
      if (Amount != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Store.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Store);
      }
      if (Customer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Customer);
      }
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.Store.Length != 0) {
        Store = other.Store;
      }
      if (other.Customer.Length != 0) {
        Customer = other.Customer;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Store = input.ReadString();
            break;
          }
          case 18: {
            Customer = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionId : pb::IMessage<TransactionId> {
    private static readonly pb::MessageParser<TransactionId> _parser = new pb::MessageParser<TransactionId>(() => new TransactionId());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VirtualWallet.Proto.Grpc.TransactionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionId(TransactionId other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionId Clone() {
      return new TransactionId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
