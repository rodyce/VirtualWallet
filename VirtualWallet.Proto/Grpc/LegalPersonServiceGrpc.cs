// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_defs/grpc/LegalPersonService.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace VirtualWallet.Proto.Grpc {
  public static partial class LegalPersonService
  {
    static readonly string __ServiceName = "VirtualWallet.Proto.Grpc.LegalPersonService";

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VirtualWallet.Proto.Messages.Person> __Marshaller_Person = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VirtualWallet.Proto.Messages.Person.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VirtualWallet.Proto.Messages.Person> __Method_GetAllLegalPersons = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VirtualWallet.Proto.Messages.Person>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllLegalPersons",
        __Marshaller_Empty,
        __Marshaller_Person);

    static readonly grpc::Method<global::VirtualWallet.Proto.Messages.Person, global::VirtualWallet.Proto.Messages.Person> __Method_AddPerson = new grpc::Method<global::VirtualWallet.Proto.Messages.Person, global::VirtualWallet.Proto.Messages.Person>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPerson",
        __Marshaller_Person,
        __Marshaller_Person);

    static readonly grpc::Method<global::VirtualWallet.Proto.Messages.Person, global::VirtualWallet.Proto.Messages.Person> __Method_ViewPerson = new grpc::Method<global::VirtualWallet.Proto.Messages.Person, global::VirtualWallet.Proto.Messages.Person>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ViewPerson",
        __Marshaller_Person,
        __Marshaller_Person);

    static readonly grpc::Method<global::VirtualWallet.Proto.Messages.Person, global::VirtualWallet.Proto.Messages.Person> __Method_UpdatePerson = new grpc::Method<global::VirtualWallet.Proto.Messages.Person, global::VirtualWallet.Proto.Messages.Person>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePerson",
        __Marshaller_Person,
        __Marshaller_Person);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::VirtualWallet.Proto.Grpc.LegalPersonServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LegalPersonService</summary>
    public abstract partial class LegalPersonServiceBase
    {
      public virtual global::System.Threading.Tasks.Task GetAllLegalPersons(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::VirtualWallet.Proto.Messages.Person> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VirtualWallet.Proto.Messages.Person> AddPerson(global::VirtualWallet.Proto.Messages.Person request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VirtualWallet.Proto.Messages.Person> ViewPerson(global::VirtualWallet.Proto.Messages.Person request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VirtualWallet.Proto.Messages.Person> UpdatePerson(global::VirtualWallet.Proto.Messages.Person request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LegalPersonService</summary>
    public partial class LegalPersonServiceClient : grpc::ClientBase<LegalPersonServiceClient>
    {
      /// <summary>Creates a new client for LegalPersonService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public LegalPersonServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LegalPersonService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public LegalPersonServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected LegalPersonServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected LegalPersonServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::VirtualWallet.Proto.Messages.Person> GetAllLegalPersons(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAllLegalPersons(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::VirtualWallet.Proto.Messages.Person> GetAllLegalPersons(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllLegalPersons, null, options, request);
      }
      public virtual global::VirtualWallet.Proto.Messages.Person AddPerson(global::VirtualWallet.Proto.Messages.Person request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddPerson(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VirtualWallet.Proto.Messages.Person AddPerson(global::VirtualWallet.Proto.Messages.Person request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddPerson, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VirtualWallet.Proto.Messages.Person> AddPersonAsync(global::VirtualWallet.Proto.Messages.Person request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddPersonAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VirtualWallet.Proto.Messages.Person> AddPersonAsync(global::VirtualWallet.Proto.Messages.Person request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddPerson, null, options, request);
      }
      public virtual global::VirtualWallet.Proto.Messages.Person ViewPerson(global::VirtualWallet.Proto.Messages.Person request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ViewPerson(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VirtualWallet.Proto.Messages.Person ViewPerson(global::VirtualWallet.Proto.Messages.Person request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ViewPerson, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VirtualWallet.Proto.Messages.Person> ViewPersonAsync(global::VirtualWallet.Proto.Messages.Person request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ViewPersonAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VirtualWallet.Proto.Messages.Person> ViewPersonAsync(global::VirtualWallet.Proto.Messages.Person request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ViewPerson, null, options, request);
      }
      public virtual global::VirtualWallet.Proto.Messages.Person UpdatePerson(global::VirtualWallet.Proto.Messages.Person request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePerson(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VirtualWallet.Proto.Messages.Person UpdatePerson(global::VirtualWallet.Proto.Messages.Person request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePerson, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VirtualWallet.Proto.Messages.Person> UpdatePersonAsync(global::VirtualWallet.Proto.Messages.Person request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePersonAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VirtualWallet.Proto.Messages.Person> UpdatePersonAsync(global::VirtualWallet.Proto.Messages.Person request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePerson, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override LegalPersonServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LegalPersonServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(LegalPersonServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllLegalPersons, serviceImpl.GetAllLegalPersons)
          .AddMethod(__Method_AddPerson, serviceImpl.AddPerson)
          .AddMethod(__Method_ViewPerson, serviceImpl.ViewPerson)
          .AddMethod(__Method_UpdatePerson, serviceImpl.UpdatePerson).Build();
    }

  }
}
#endregion
