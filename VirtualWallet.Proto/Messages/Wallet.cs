// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_defs/messages/Wallet.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VirtualWallet.Proto.Messages {

  /// <summary>Holder for reflection information generated from proto_defs/messages/Wallet.proto</summary>
  public static partial class WalletReflection {

    #region Descriptor
    /// <summary>File descriptor for proto_defs/messages/Wallet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WalletReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBwcm90b19kZWZzL21lc3NhZ2VzL1dhbGxldC5wcm90bxIcVmlydHVhbFdh",
            "bGxldC5Qcm90by5NZXNzYWdlcxogcHJvdG9fZGVmcy9tZXNzYWdlcy9QZXJz",
            "b24ucHJvdG8i5gEKBldhbGxldBIPCgdiYWxhbmNlGAEgASgEEj0KBHR5cGUY",
            "AiABKA4yLy5WaXJ0dWFsV2FsbGV0LlByb3RvLk1lc3NhZ2VzLldhbGxldC5X",
            "YWxsZXRUeXBlEjQKBnBlcnNvbhgDIAEoCzIkLlZpcnR1YWxXYWxsZXQuUHJv",
            "dG8uTWVzc2FnZXMuUGVyc29uEhcKD3N1YnNjcmliZXJfY29kZRgEIAEoCSI9",
            "CgpXYWxsZXRUeXBlEgwKCENVU1RPTUVSEAASCQoFU1RPUkUQARIKCgZERUFM",
            "RVIQAhIKCgZCUk9LRVIQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::VirtualWallet.Proto.Messages.PersonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VirtualWallet.Proto.Messages.Wallet), global::VirtualWallet.Proto.Messages.Wallet.Parser, new[]{ "Balance", "Type", "Person", "SubscriberCode" }, null, new[]{ typeof(global::VirtualWallet.Proto.Messages.Wallet.Types.WalletType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Wallet : pb::IMessage<Wallet> {
    private static readonly pb::MessageParser<Wallet> _parser = new pb::MessageParser<Wallet>(() => new Wallet());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Wallet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VirtualWallet.Proto.Messages.WalletReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Wallet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Wallet(Wallet other) : this() {
      balance_ = other.balance_;
      type_ = other.type_;
      Person = other.person_ != null ? other.Person.Clone() : null;
      subscriberCode_ = other.subscriberCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Wallet Clone() {
      return new Wallet(this);
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 1;
    private ulong balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::VirtualWallet.Proto.Messages.Wallet.Types.WalletType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VirtualWallet.Proto.Messages.Wallet.Types.WalletType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 3;
    private global::VirtualWallet.Proto.Messages.Person person_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VirtualWallet.Proto.Messages.Person Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "subscriber_code" field.</summary>
    public const int SubscriberCodeFieldNumber = 4;
    private string subscriberCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubscriberCode {
      get { return subscriberCode_; }
      set {
        subscriberCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Wallet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Wallet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Balance != other.Balance) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Person, other.Person)) return false;
      if (SubscriberCode != other.SubscriberCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Balance != 0UL) hash ^= Balance.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (person_ != null) hash ^= Person.GetHashCode();
      if (SubscriberCode.Length != 0) hash ^= SubscriberCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Balance != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Balance);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (person_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Person);
      }
      if (SubscriberCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubscriberCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Balance != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Balance);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      if (SubscriberCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriberCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Wallet other) {
      if (other == null) {
        return;
      }
      if (other.Balance != 0UL) {
        Balance = other.Balance;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          person_ = new global::VirtualWallet.Proto.Messages.Person();
        }
        Person.MergeFrom(other.Person);
      }
      if (other.SubscriberCode.Length != 0) {
        SubscriberCode = other.SubscriberCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Balance = input.ReadUInt64();
            break;
          }
          case 16: {
            type_ = (global::VirtualWallet.Proto.Messages.Wallet.Types.WalletType) input.ReadEnum();
            break;
          }
          case 26: {
            if (person_ == null) {
              person_ = new global::VirtualWallet.Proto.Messages.Person();
            }
            input.ReadMessage(person_);
            break;
          }
          case 34: {
            SubscriberCode = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Wallet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum WalletType {
        [pbr::OriginalName("CUSTOMER")] Customer = 0,
        [pbr::OriginalName("STORE")] Store = 1,
        [pbr::OriginalName("DEALER")] Dealer = 2,
        [pbr::OriginalName("BROKER")] Broker = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
